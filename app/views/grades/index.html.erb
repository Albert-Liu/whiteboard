<%= javascript_include_tag "grade.js" %>
<%= javascript_include_tag "jquery.tablesorter.js" %>
<script>
  var changed_grades = {}
  var grades = new Grade(<%=@course.grading_rule.get_grade_params_for_javascript.html_safe %>);
  $(document).ready(function() { 
    // call the tablesorter plugin
    $(".sortable").tablesorter({ 
      // define a custom text extraction function 
      textExtraction: function(node) { 
        // extract data from markup and return it 
        if ($(node).find("input").length > 0) return $(node).find("input").val();
        return $(node).text();
      } 
    });
      // bind double click event for changing visibility of a grade
    $(".grade input[type='text']").dblclick(function(event){
        $(this).toggleClass("draft");
        change_grade(event);
    })
     // Calculate initial Earned Grades
    $("tr[id^='s_']").each(function(){
      var student_id = $(this).attr("id").replace("s_","");
      grades.earned_grade(student_id);    
//      grades.updateFinalGrade(student_id);
    });

     // Leave Warning
    $(window).bind("beforeunload", function(){
        if(Object.keys(changed_grades).length > 0 ){
            return 'You have some unsaved changes in this page.';
        }
    });
    //

  });
  window.onbeforeunload = function(){


  };
  function change_grade(event){
      console.log("change");
    var grade_attrs = parse_id($(event.target).attr('id'));
    var score = $(event.target).val();
    var previousValue = event.target.defaultValue;
    var visible = !$(event.target).hasClass("draft");
    var previousVisible = $(event.target).hasClass("default_draft")?false:true;
    grades.earned_grade(grade_attrs.student_id);
//    grades.updateFinalGrade(grade_attrs.student_id);
    if(previousValue != score || visible != previousVisible)
    {
      $(event.target).addClass("changedScore");
      changed_grades[grade_attrs.assignment_id+"_"+grade_attrs.student_id] = {
        course_id: grade_attrs.course_id,
        assignment_id: grade_attrs.assignment_id,
        student_id: grade_attrs.student_id,
        score: score,
        is_student_visible: visible
      };
    }
    else{
      $(event.target).removeClass("changedScore");
      delete changed_grades[grade_attrs.assignment_id+"_"+grade_attrs.student_id];
    }
  }
  function parse_id(idAttr){
      var course_id = parseInt(idAttr.split("_")[0]);
      var assignment_id = idAttr.split("_")[1];
      var student_id = parseInt(idAttr.split("_")[2]);

      if (assignment_id == "final")
        assignment_id = -1;
      else
        assignment_id = parseInt(assignment_id);
      return {"course_id": course_id, "assignment_id": assignment_id, "student_id": student_id};
  }

  function post_drafted_and_send() {
      post_grades('<%=post_drafted_and_send_path(@course)%>');

  }

  function save() {
      post_grades('<%=save_path(@course)%>');
  }
  function post_grades(url) {
      var data = {};
      data.grades = Object.keys(changed_grades).map(function(key){return changed_grades[key];});
      $("#loading").show();
      $.ajax({
          contentType: "application/json;",
          url: url,
          type: "POST",
          data: JSON.stringify(data, null, 1),
          dataType: "json",
          success:function(data){
              if(data["message"] == "true"){
                  location.reload(false);
              }
              changed_grades = {};
              $("#loading").hide();
          },
          error: function(jqXHR, textStatus, errorThrown){
              console.log("Unalbe to submit the record");
              //changed_grades = {};
              $("#loading").hide();
          }

      })
    }
  </script>
  <style>
    .changedScore{
      border: thin solid;
      border-color: red;
    }
    .draft{
      background-color: #AAA;
    }
    td.grade input{
      width: 98%;
      height: 100%;
      text-align: right;
      border-width: 1px;
      margin: 0px;
      padding-right: 0px;
    }
    td.grade{
      border-width: 1px;
      padding: 0;
    }
    #legend{
      border:0px;
      border-collapse: collapse;
    }
    #legend td{
      border: 0;
    }
  </style>
  <h1><%=@course.name %></h1>


  <div id="result"></div>
  <div style="width:100%;">
    <table id="legend">
     <tr></tr>
        <td style="width:100px;padding:0 10px;">
          <input style="width:10px;height:10px;" size="1" type="'text" class="draft" >
        Draft</td>

      <td style="width:150px;padding:0 10px;"><input class="changedScore" style="width:10px;height:10px;" size="1" type="'text" /> Unsaved changes</td>
      <td style="width:250px;padding:0 10px;"><%=image_tag("doubleclick.png", :size=>"25x25")%> Double click to toggle draft</td>
      </tr>
    </table>
  </div>
  <div class="score">
    <table class="cmu_table sortable">
      <thead>
        <tr>
          <th style='max-width:78px; word-wrap:break-word;' rowspan="2"> First Name
          </th>
          <th style='max-width:78px; word-wrap:break-word;' rowspan="2"> Last Name </th>
          <th rowspan="2"> Team </th>
          <% @assignments.each do |assignment| %>
            <th style='max-width:30px;' title="<%=assignment.name%>"><%="#{assignment.try(:short_name) || assignment.name[0..4]}"%></th>
          <%end %>
          <th rowspan="2">Earned Grades</th>
          <th rowspan="2">Final Grades</th>
        </tr>
        <tr>
          <% @assignments.each do |assignment| %>
            <td>
              <% case GradingRule.get_grade_type @course.id %>
              <%when "points" %>
                Max <%="#{assignment.maximum_score}"%>
              <%else%>
                Weight <%="#{assignment.maximum_score}"%> %
              <%end%>
            </td>
          <% end %>
        </tr>
      </thead>

      <input type="hidden" id="course_id" value=<%=@course.id%> />
      <% @grades.each do |student, grade_entries| %>
      <tr id="s_<%=student.id%>">
        <td><%=student.first_name%></td>
        <td><%=student.last_name%></td>
        <td><%=@team_assignment[student.id].try(:name) || "" %></td>
        <% @assignments.each do |assignment|%>
          <td class='grade <%=(grade_entries.has_key?(assignment.id) && !grade_entries[assignment.id].is_student_visible)?"draft":""%>'>
            <input id="<%= @course.id %>_<%=assignment.id%>_<%=student.id%>"
                   value='<%=(grade_entries.has_key?(assignment.id))?(grade_entries[assignment.id].score):""%>'
                   type="text" size="4" width="100%" onchange="change_grade(event);"
                   class='<%=(grade_entries.has_key?(assignment.id) && !grade_entries[assignment.id].is_student_visible)?"draft default_draft":" default_publish"%>' />
          </td>
        <% end %>
        <td class='earned'></td>
        <td class='final grade'>
          <input id="<%= @course.id %>_final_<%=student.id%>"
                 value='<%=(grade_entries.has_key?("final"))?(grade_entries["final"].score):""%>'
                 type="text" size="4" width="100%" onchange="change_grade(event);"
                 class='<%=(grade_entries.has_key?("final") && !grade_entries["final"].is_student_visible)?"draft default_draft":" default_publish"%>' />
         </td>
      </tr>
      <%end%>
    </table>
    <div>
     <%= link_to image_tag("/images/ajax-loader.gif", :class => "loading", :alt => "Loading" ,:hidden=>"true", :id=>"loading") %>
    <button type="button" id="gradebook_submit" onclick="save()">Save</button>
    <button type="button" id="gradebook_long_button" onclick="post_drafted_and_send()">mark draft grade as graded and email to students</button>
    </div>
    <div>
      <h2>Import Grade Book</h2>
      <% form_for :import, :url=>{:controller=>"grades", :action=>"import"}, :html => { :multipart => true } do |f| %>
        <%= f.file_field :spreadsheet -%>
        <%= submit_tag 'Import' %>
      <% end %>
    </div>
    <div>
      <h2>Export Grade Book</h2>
      <% form_for :export, :url=>{:controller=>"grades", :action=>"export"} do |f| %>
        <%= submit_tag 'Export' %>
      <% end %>
    </div>
  </div>

