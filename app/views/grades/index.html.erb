<%#= javascript_include_tag "grade_books.js" %>
<%= javascript_include_tag "jquery.tablesorter.js" %>
<script>
  var changed_grades = {}
  $(document).ready(function() { 
    // call the tablesorter plugin
    $(".sortable").tablesorter({ 
      // define a custom text extraction function 
      textExtraction: function(node) { 
        // extract data from markup and return it 
        if ($(node).find("input").length > 0) return $(node).find("input").val();
        return $(node).text();
      } 
    });
  });
  function change_grade(event){
    var grade_attrs = parse_id($(event.target).attr('id'));
    var score = $(event.target).val();
    var previousValue = event.target.defaultValue;
    
    compute_grades(grade_attrs.student_id);
    if(previousValue != score)
    {
      $(event.target).addClass("changedScore");
      changed_grades[grade_attrs.assignment_id+"_"+grade_attrs.student_id] = {
        course_id: grade_attrs.course_id,
        assignment_id: grade_attrs.assignment_id,
        student_id: grade_attrs.student_id,
        score: score//parseFloat(score)
      };
    }
    else{
      $(event.target).removeClass("changedScore");
      delete changed_grades[grade_attrs.assignment_id+"_"+grade_attrs.student_id];
    }
  }
  function parse_id(idAttr){
      return {"course_id": parseInt(idAttr.split("_")[0]), "assignment_id": parseInt(idAttr.split("_")[1]), "student_id": parseInt(idAttr.split("_")[2])};
  }

    function compute_grades(student_id){
      var total = 0; 
      $("#s_" + student_id + " input[type='text']").map(function(){return parseFloat($(this).val());}).each(function(index,value){
          total += value;
        });
      $("#s_" + student_id + " .earned").text(total);

    
    }
  function saveAsDraft() {
      post_grades('<%=save_draft_path(@course)%>');
  }
  function postAll() {
      post_grades('<%=post_all_grades_path(@course)%>');
  }
  function post_grades_for_one_assignment(assignment_id){

      var data = {};
      data.grades = Object.keys(changed_grades).map(function(key){return changed_grades[key];});
      data.assignment_id = assignment_id
      $.ajax({
          contentType: "application/json;",
          url: '<%= post_one_assignment_path %>',
          type: "POST",
          data: JSON.stringify(data, null, 1),
          dataType: "json",
          success:function(data){
              //clean changed_grades
              $.each(changed_grades, function(index, value){
                  if(parseInt(index.split("_")[0]) == assignment_id)
                    delete changed_grades[index];
              });

              //update changed view
              $("input[id^='<%=@course.id%>_" + assignment_id + "']").each(function(){
                  $(this).removeClass("draft");
                  $(this).removeClass("changedScore");
                  $(this).get(0).defaultValue = $(this).val();
              })

          },
          error: function(jqXHR, textStatus, errorThrown){
              console.log("Unalbe to submit the record");
          }
      });
  }
  function post_grades(url) {
      var data = {};
      data.grades = Object.keys(changed_grades).map(function(key){return changed_grades[key];});
      $.ajax({
          contentType: "application/json;",
          url: url,
          type: "POST",
          data: JSON.stringify(data, null, 1),
          dataType: "json",
          success:function(data){
              if(data["message"] == "true"){
                  location.reload(false);
              }
              changed_grades = {};
          },
          error: function(jqXHR, textStatus, errorThrown){
              console.log("Unalbe to submit the record");
              //changed_grades = {};
          }

      })
  }
</script>
<style>
  .changedScore{
    border: thin solid;
    border-color: red;
  }
  .draft{
    background-color: #AAA;
  }
  td.grade input{
    width: 94%;
    height: 101%;
    text-align: right;
    border-width: 1px;
    margin: 0px;
      padding-right: 2px;
  }
  td.grade{
    padding: 0;
    border: 0px;
  }
  #legend{
      border:0px;
      border-collapse: collapse;
  }
  #legend td{
      border: 0;
  }
</style>
<h1><%=@course.name %></h1>


    <div id="result"></div>
    <div style="width:100%;">
      <table id="legend">
        <tr>
          <td style="width:20px;padding:0 10px;">

           <input style="widht:10px;height:10px;" size="1" type="'text" class="draft" >
          </td>
          <td>Draft</td>
        </tr>
        <tr><td><input class="changedScore" size="1" type="text" /></td><td>Unsaved changes</td></tr>
      </table>
    </div>
    <div class="score">
      <table class="cmu_table sortable">
        <thead>
          <tr>
            <th style='max-width:78px; word-wrap:break-word;' rowspan="3"> First Name
            </th>
            <th style='max-width:78px; word-wrap:break-word;' rowspan="3"> Last Name </th>
            <th rowspan="3"> Team </th>
            <% @assignments.each do |assignment| %>
              <th style='max-width:30px; word-wrap:break-word;'><%="#{assignment.name}"%></th>
            <%end %>
            <th rowspan="3">Earned Grades</th>
          </tr>
          <tr>
            <% @assignments.each do |assignment| %>
                <td>Max <%="#{assignment.maximum_score}"%></td>
              <% end %>
          </tr>
          <tr>
            <% @assignments.each do |assignment| %>
            <td> <button type="button" id="a_<%=assignment.id%>" onclick="post_grades_for_one_assignment(<%=assignment.id %>)">Save grades</button></td>
            <% end %>
          </tr>

        </thead>

        <input type="hidden" id="course_id" value=<%=@course.id%> />
        <% @grades.each do |student, grade_entries| %>
          <tr id="s_<%=student.id%>">
            <td><%=student.first_name%>
            </td>
            <td><%=student.last_name%></td>
            <td><%=@team_assignment[student.id].try(:name) || "" %></td>
            <% @assignments.each do |assignment|%>
              <td class='grade <%=(grade_entries.has_key?(assignment.id) && !grade_entries[assignment.id].is_student_visible)?"draft":""%>'>
                <input id="<%= @course.id %>_<%=assignment.id%>_<%=student.id%>" 
                       value='<%=(grade_entries.has_key?(assignment.id))?(grade_entries[assignment.id].score):""%>'
                       type="text" size="4" width="100%" onchange="change_grade(event);" 
                       class='<%=(grade_entries.has_key?(assignment.id) && !grade_entries[assignment.id].is_student_visible)?"draft":""%>' />
              </td>
            <% end %>
            <td class='earned'><%=(grade_entries.has_key?("earned_grade"))?(grade_entries["earned_grade"]):""%></td>
          </tr>
        <%end%>
      </table>

      <div style='padding-top:20px;margin-bottom: 40px;'>
        <button type="button" id="gradebook_submit" onclick="postAll()">Save</button>
        <button type="button" id="gradebook_save_draft" onclick="saveAsDraft()">Save as Draft</button>
      </div>

  </div>

