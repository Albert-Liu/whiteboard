<% content_for :title, 'People - Phone book' %>
<% content_for :tablesorter do %>
    <%= javascript_include_tag 'tablesorter' %>
    <%= javascript_include_tag 'tablesorter_filter' %>

    <script type="text/javascript" >
    
        var jq_xhr;                             // jQuery Ajax XML HTTP Request Object
        var searchBox_old_val  = '';            // searchBox old value holder. If user changes keystrokes but lands up with same parameter, don't send a request again.
        var ajax_req_issued = false;            // object that 
        var sendQueryToServer_timer = null;     // js timer object for controlling number of requests going to server on keyup

        $(document).ready(function () {

            if ($("#filterBoxOne").prop("disabled") == true) {
                $('#filterBoxOne').val('');
                $('#filterBoxOne').removeAttr("disabled");
                $('#filterBoxOne').focus();
            }

            // Hide the search results table by default. We'll pull the results manually and populate through js.
            $("#people_table").hide();
            $("#people_table").tablesorter({
                // add zebra striping style
                widgets:['zebra'],
                // don't allow sorting on the picture and contact details columns
                headers:{0:{sorter:false}, 3:{sorter:false}}
            })
            .tablesorterFilter({ filterContainer:$("#filterBoxOne"),
                filterClearContainer:$("#filterClearOne"),
                filterColumns:[0, 1, 2],
                filterCaseSensitive:false
            });

            // on entering some key in the search box "filterBoxOne"
            $("#filterBoxOne").keyup(function() {
                if(sendQueryToServer_timer != null){
                    // there's a previous timer running, clear it and set a new one for the new keystrokes of the user
                    clearTimeout(sendQueryToServer_timer);
                }
                // set timer for the keystrokes entered by user
                sendQueryToServer_timer = setTimeout(queryDatabase, 500);
            });
        });

        function queryDatabase(){
            searchBox = $("#filterBoxOne");
            if(searchBox.val() != searchBox_old_val ){
                
                searchBox_old_val =searchBox.val();
                
                if($.trim(searchBox.val())){
                    if(ajax_req_issued){
                        // an ajax request was already issued, abort them
                        jq_xhr.abort();
                        // Note: only instructs browser to stop listening for old request, if request already issued to server, cannot force server to stop processing.
                    }

                    // send ajax request and assign the XHML HTTP request object returned to jq_xhr
                    jq_xhr = $.ajax({
                      
                      url : 'people_search',  // the URL for the request
                      data : { filterBoxOne : searchBox.val(), ajaxCall : true },  // the data to send  (will be converted to a query string)
                      method : 'GET', 
                      dataType : 'json',  // the type of data we expect back
                      contentType: "application/json; charset=utf-8",
                      beforeSend: function() {
                        ajax_req_issued = true;
                      },
                      complete: function() {
                        ajax_req_issued = false;
                      },
                      success : function(json) {
                            buildSearchResults(json);
                      }
                   });
                
                }else{
                // user has not entered any string
                    if(ajax_req_issued){
                        jq_xhr.abort();
                    }
                    // hide the results table
                    $("#people_table").hide();
                }
            }
        }

        /* helper function to build the table results in #people_table */
        function buildSearchResults(json) {
            for (var i in json){
                // build row number i
                buildRow(json[i]);
            }
            // after all rows built, show #people_table
            $("#people_table").show();
        }

        /* helper function to build the result row */
        function buildRow(json){
            
            row = document.createElement('tr');
            
            // image data
            photo_td = document.createElement('td');
            photo_td.setAttribute('class','photobook-img');
            image_uri_link = json.image_uri;
            photo_td.appendChild(loadImage(image_uri_link));
            
            // first_name data
            firstName_td = document.createElement('td');
            firstName_anchorLink = document.createElement('a');
            firstName_anchorLink.href = json.path;
            firstName_anchorLink.appendChild(document.createTextNode(json.first_name));
            firstName_td.appendChild(firstName_anchorLink);
            
            // last_name data
            lastName_td = document.createElement('td');
            lastName_anchorLink = document.createElement('a');
            lastName_anchorLink.href = json.path;
            lastName_anchorLink.innerHTML = json.last_name;
            lastName_td.appendChild(lastName_anchorLink);

            // contact details data
            contactDtls_td = document.createElement('td');
            var contactDtls_string = '';
            for(var i in json.contact_dtls){
                contactDtls_string += json.contact_dtls[i] + "<br />";
            }
            contactDtls_string += json.email
            contactDtls_td.innerHTML = contactDtls_string;
            
            // Program Data
            program = document.createElement('td');
            program.appendChild(document.createTextNode(json.program)); 
            
            // append each data element to the row
            row.appendChild(photo_td);
            row.appendChild(firstName_td);
            row.appendChild(lastName_td);
            row.appendChild(contactDtls_td);
            row.appendChild(program);
            
            // append the row to the table
            $('#people_table tbody').append(row);
        }

        /* helper function to build the photo image form the uri */
        function loadImage(image_uri){
            var img = new Image();
            img.width = 60;
            img.src = image_uri;
            $(img).bind({
                error: function() {
                    // alert('404 on image');
                    // if there's some error in loading the image, load scotty dog instead
                    img.src = "/images/mascot.jpg";
                }
            });
            $(img).attr('src',image_uri);
            return img;
        }

       function export_csv(){
           //alert("hit!");
           searchBox = $("#filterBoxOne");
           //if(searchBox.val() != searchBox_old_val ){

               //searchBox_old_val =searchBox.val();

               if($.trim(searchBox.val())){
                   //if(ajax_req_issued){
                       // an ajax request was already issued, abort them
                   //    jq_xhr.abort();
                       // Note: only instructs browser to stop listening for old request, if request already issued to server, cannot force server to stop processing.
                   //}

                   // send ajax request and assign the XHML HTTP request object returned to jq_xhr
                   jq_xhr = $.ajax({

                       url : 'people_search',  // the URL for the request
                       data : { filterBoxOne : searchBox.val(), ajaxCall : true, fake_data:true },  // the data to send  (will be converted to a query string)
                       method : 'GET',
                       dataType : 'csv',  // the type of data we expect back
                       contentType: "txt/csv; charset=utf-8",
                       //beforeSend: function() {
                       //    ajax_req_issued = true;
                       //},
                       //complete: function() {
                       //    ajax_req_issued = false;
                       //},
                       success : function(json) {
                           //buildSearchResults(json);
                           console.log("sent succeeded!");
                       }
                   });

               }
           //}
       }

        function show_box(){

            var boxValue = $("#filterBoxOne").val();

            //if($.trim(searchBox.val())){

            var $dialog = $('<div></div>')
                    .html('Which format do you wish to export to?')
                    .dialog({
                        autoOpen: true,
                        resizable: false,
                        draggable: false,
                        width: 100,
                        height: 130,
                        modal: true,
                        title: 'Export Contacts',
                        buttons:{
                            "CSV":function(){
                                //alert(boxValue);
                                window.location.href='http://localhost:3000/people_csv.csv?filterBoxOne='+boxValue;
                                $(this).dialog("close");
                            },
                            "vCard":function(){
                                window.location.href='http://localhost:3000/people_vcf?filterBoxOne='+boxValue;
                                $(this).dialog("close");
                            }

                        }
                    });
        }

    </script>
<% end %>


<% if can? :create, User %>
    <%= link_to 'New person', new_person_path %>
<% end %>

<div>

  <%= render :partial => "tablesorter_filter_box" %>

</div>

<!-- conference room url
http://info.sv.cmu.edu/twiki/bin/view/Main/CarnegieMellonSiliconValley
-->


<table id="people_table" class="tablesorter" hidden="true" >
  <thead>
  <tr>
    <th>&nbsp;</th>
    <th>First name</th>
    <th>Last name</th>
    <th>Contact Details</th>
    <th>Program</th>
  </tr>
  </thead>
  <tbody>

  </tbody>
</table>

<br/>

<% if can? :create, User %>
    <%= link_to 'New person', new_person_path %>
<% end %>

<input type="button" id="show_box" value="Export List" onclick="show_box();" style="float: right" />

<input type="hidden" id="hidden_field" value="off">
